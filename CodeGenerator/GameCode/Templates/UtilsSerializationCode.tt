<#@ template language="C#" #>
<#@ import namespace="Schema" #><#+

private void WriteSerializationCode(XmlClassMember member, DataSchema schema)
{
	var memberName = Utils.PrivateMemberName(member.name);
	var encoding = Utils.GetEncodingType(member.encoding);

	if (member.type == Constants.TypeList)
	{
		WriteSerializationCode($"{memberName}.Count", Constants.TypeInt, schema, encoding);
		WriteLine($"for (int i = 0; i < {memberName}.Count; ++i)");
		WriteLine("{");
		PushIndent("\t");
		WriteSerializationCode($"{memberName}[i]", member.value, schema, encoding);
		PopIndent();
		WriteLine("}");
	}
	else if (member.type == Constants.TypeMap)
	{
		WriteSerializationCode($"{memberName}.Count", Constants.TypeInt, schema, encoding);
		WriteLine($"foreach (var item in {memberName}.Items)");
		WriteLine("{");
		PushIndent("\t");
		WriteSerializationCode("item.Key", member.key, schema, encoding);
		WriteSerializationCode("item.Value", member.value, schema, encoding);
		PopIndent();
		WriteLine("}");
	}
	else if (member.type == Constants.TypeInventory)
	{
		WriteSerializationCode($"{memberName}.Count", Constants.TypeInt, schema, encoding);
		WriteLine($"foreach (var item in {memberName}.Items)");
		WriteLine("{");
		PushIndent("\t");
		WriteSerializationCode("item.Key", member.value, schema, encoding);
		WriteSerializationCode("item.Value", Constants.TypeInt, schema, encoding);
		PopIndent();
		WriteLine("}");
	}
	else if (member.type == Constants.TypeSet)
	{
		WriteSerializationCode($"{memberName}.Count", Constants.TypeInt, schema, encoding);
		WriteLine($"foreach (var item in {memberName}.Items)");
		WriteLine("{");
		PushIndent("\t");
		WriteSerializationCode("item", member.value, schema, encoding);
		PopIndent();
		WriteLine("}");
	}
	else
	{
		WriteSerializationCode(memberName, member.type, schema, encoding);
	}
}

private void WriteSerializationCode(string memberName, string memberType, DataSchema schema, string encoding)
{
	if (memberType == Constants.TypeInt)
		WriteLine($"writer.WriteInt({memberName}, {encoding});");
	else if (memberType == Constants.TypeUint)
		WriteLine($"writer.WriteUint({memberName}, {encoding});");
	else if (memberType == Constants.TypeLong)
		WriteLine($"writer.WriteLong({memberName}, {encoding});");
	else if (memberType == Constants.TypeUlong)
		WriteLine($"writer.WriteUlong({memberName}, {encoding});");
	else if (memberType == Constants.TypeShort)
		WriteLine($"writer.WriteShort({memberName}, {encoding});");
	else if (memberType == Constants.TypeUshort)
		WriteLine($"writer.WriteUshort({memberName}, {encoding});");
	else if (memberType == Constants.TypeSbyte)
		WriteLine($"writer.WriteSbyte({memberName}, {encoding});");
	else if (memberType == Constants.TypeByte)
		WriteLine($"writer.WriteByte({memberName}, {encoding});");
	else if (memberType == Constants.TypeFloat)
		WriteLine($"writer.WriteFloat({memberName}, {encoding});");
	else if (memberType == Constants.TypeBool)
		WriteLine($"writer.WriteBool({memberName}, {encoding});");
	else if (memberType == Constants.TypeString)
		WriteLine($"writer.WriteString({memberName}, {encoding});");
	else
		WriteLine($"{memberName}.Serialize(writer);");
}

#>