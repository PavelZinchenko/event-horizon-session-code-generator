<#@ template language="C#" #>
<#@ include file="GeneratedCodeWarning.tt" #>
<#@ include file="UtilsClassMember.tt" #>
<#@ include file="UtilsSerializationCode.tt" #>
<#@ include file="UtilsDeserializationCode.tt" #>

using <#= Utils.RootNamespace #>.<#= Utils.UtilsNamespace #>;

namespace <#= Utils.RootNamespace #>.<#= Context.GetObjectNamespace(ObjectData.name) #>
{
	public readonly partial struct <#= ObjectData.name #>
	{
<#
		PushIndent("\t\t");
		foreach (var item in ObjectData.members)
			WriteClassMember(item, Context, true);
		PopIndent();
#>

		public <#= ObjectData.name #>(<#= Utils.CallbackInterface #> parent)
		{
<#
			PushIndent("\t\t\t");
			foreach (var item in ObjectData.members)
				WriteInitializer(item, Context, "parent");
			PopIndent();
#>
		}

		public <#= ObjectData.name #>(<#= Utils.ReaderClass #> reader, <#= Utils.CallbackInterface #> parent)
		{
<#
			PushIndent("\t\t\t");
			foreach (var item in ObjectData.members)
				WriteDeserializationCode(item, Context, "parent");
			PopIndent();
#>
		}

<#
		PushIndent("\t\t");
		foreach (var item in ObjectData.members)
			WriteProperty(item, Context, true);
		PopIndent();

		if (Context.IsLatestObjectVersion(ObjectData.name))
		{
			WriteLine(string.Empty);
			PushIndent("\t\t");
			WriteLine($"public void Serialize({Utils.WriterClass} writer)");
			WriteLine("{");
			PushIndent("\t");
			foreach (var item in ObjectData.members)
				WriteSerializationCode(item, Context);
			PopIndent();
			WriteLine("}");
			PopIndent();
		}
#>
	}
}
